[tool.poetry]
name = "snakeboost"
version = "0.3.0"
description = "Utility functions to turbocharge your snakemake workflows. Virtualenvs, tarfiles, and more."
authors = ["Peter Van Dyken <pvandyk2@uwo.ca>"]
license = "MIT"
readme = "README.md"
keywords = ["snakemake", "workflow", "data science", "utility", "helpers"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Utilities",
    "Typing :: Typed"
]
packages = [
    { include = "snakeboost" }
]

[tool.poetry.dependencies]
python = ">=3.7, <3.11"
Pygments = "^2.10.0"
attrs = "^21.2.0"
colorama = "^0.4.4"
more-itertools = "^8.8.0"

[tool.poetry.dev-dependencies]
black = "^21.11b1"
pytest = "^6.2.5"
flake8 = "^4.0.1"
isort = "^5.10.1"
pre-commit = "^2.15.0"
mkinit = "^0.3.3"
pylint = "^2.11.1"
mypy = "^0.910"
hypothesis = "^6.35.0"
mkdocs-material = "^8.1.9"
mkdocstrings = {extras = ["numpy-style"], version = "^0.17.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
setup = "pre-commit install"
mkinit = "mkinit --recursive --nomods --black -i snakeboost"
check_mkinit = "mkinit --recursive --nomods --black --diff snakeboost"
docs = "mkdocs serve"

[tool.isort]
profile = "black"
multi_line_output = 3
add_imports = ["from __future__ import absolute_import"]
# We ignore __init__ file so that mkinit and isort don't undo each other
extend_skip = ["__init__.py"]

[tool.pylint.master]
ignore-patterns = "^[0-9][0-9]+_,^test_"

[tool.pylint.format]
good-names = "i,j,k,ex,_,x,y,f,d,s,T"

[tool.pylint.messages_control]
disable = """
    missing-function-docstring,
    missing-module-docstring,
    too-few-public-methods
"""
